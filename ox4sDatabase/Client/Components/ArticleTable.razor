@typeparam TItem

@using ox4sDatabase.Shared
@using ox4sDatabase.Client.Pages
@using Syncfusion.Blazor.Navigations
@using System.Reflection.Metadata.Ecma335
@using System.Diagnostics

<link href="Articles.razor.css" style="stylesheet" />

<div class="table-responsive articletable">
    <table class="table table-hover table-striped table-sm">
        <thead>
        <tr>
            @foreach (var propertyInfo in typeof(TItem).GetProperties())
            {
                @if(NotPresentedDetails != null && NotPresentedDetails.Contains(propertyInfo.Name) == false)
                {
                    <th>@propertyInfo.Name</th>
                }
                @if (NotPresentedDetails == null || NotPresentedDetails.Count == 0)
                {
                    <th class="col">@propertyInfo.Name</th>
                }
            }
        </tr>
        </thead>
		<tbody>
            @foreach (var article in Articles ?? new List<TItem>())
            {
                resetCounter();
                <tr>
                @foreach (var property in typeof(TItem).GetProperties())
                {
                        @if (NotPresentedDetails != null && NotPresentedDetails.Contains(property.Name) == false)
                    {
                        <td>
                            @typeof(TItem).GetProperties()[returnCounter()].GetValue(article)
                        </td>
                    }
                    @if (NotPresentedDetails == null || NotPresentedDetails.Count == 0)
                    {
                        <td class="col">
                            @typeof(TItem).GetProperties()[returnCounter()].GetValue(article)
                        </td>
                    }
                    incrementCounter();
                }
                </tr>
            }
		</tbody>
	</table>
</div>

@code {
    private int count = 0;

    private Article _newArticle = new();

    [Parameter]
    public List<TItem>? Articles { get; set; }

    //[Parameter]
    //public Type ItemType { get; set; }

    [Parameter]
    public List<string>? NotPresentedDetails { get; set; }

    private void incrementCounter() => ++count;

    private int resetCounter() => count = 0;

    private int returnCounter()
    {
        return count;
    }

}
